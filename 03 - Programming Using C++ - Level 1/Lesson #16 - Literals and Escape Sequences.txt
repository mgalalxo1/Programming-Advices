#include <iostream>
using namespace std;

int main() {
    cout << "\a"; 
    return 0;
}

#include <iostream>
using namespace std;

int main() {
    cout << "Dear Sir/Madam,\n\n";
    cout << "How are you?\n\n";
    cout << "My name is \"Mohammed\", nice to meet you.\n";
    return 0;
}

#include <iostream>
using namespace std;

int main() {
    cout << "Ali\tAhmed\tLina" << endl;
    cout << "Fadi\tZain\tMona" << endl;
    return 0;
}

Q1: What is a literal?
A:
A literal is a constant value written directly in the code. It represents a fixed value that does not change during program execution.
🔹 Example: 10, 'A', "Hello" are all literals.

Q2: Can you assign different values to a literal?
A:
❌ No, you cannot assign different values to a literal.
Literals are constant values — they are not variables. For example, the number 5 in int x = 5; is a literal and cannot be changed.

Q3: What are literal types?
A:
There are several types of literals in C++:

🔢 Integer literals: e.g., 100, -50

🔤 Character literals: e.g., 'a', '9'

🧮 Floating-point literals: e.g., 3.14, -0.01

📃 String literals: e.g., "Hello", "C++"

🔘 Boolean literals: true, false

🧷 Escape sequence literals: e.g., '\n', '\t', '\\'

Q4: Why do we need escape sequence literals?
A:
Escape sequence literals are used to represent characters that are not printable or have special meaning (like a new line or tab).
They help in formatting output and controlling text.
🔹 Examples:

\n → New line

\t → Horizontal tab

\" → Double quote

\\ → Backslash

